using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using Newtonsoft.Json;

namespace AnkietyUW.Utilities
{
    public class QuestionsProvider : IQuestionsProvider
    {

        private const int NumberOfAllSeries = 60;
        private const int NumberOfQuestionsInSeries = 68;
        private readonly int[][] _questionsEmocje;
        private readonly int[][] _questionsOcb;
        private readonly int[][] _questionsCwb;

        #region pytaniaEmocje
        private readonly int[] _pytaniaEmocje = new int[540] {
            2, 3, 4, 9, 11, 18, 22, 26, 28, 1, 5, 6, 8, 10, 13, 15, 19, 22, 2, 3, 5, 6, 10,
            11, 12, 23, 25, 3, 10, 16, 19, 20, 21, 22, 25, 26, 3, 5, 8, 10, 14, 16, 18, 21,
            26, 1, 3, 5, 6, 7, 16, 19, 23, 25, 1, 2, 3, 4, 10, 15, 23, 26, 27, 1, 4, 6, 7, 8
            , 14, 19, 24, 25, 1, 6, 8, 9, 12, 15, 17, 21, 24, 2, 4, 7, 8, 9, 11, 22, 25, 28,
            2, 3, 7, 10, 13, 14, 18, 19, 27, 2, 3, 13, 14, 15, 18, 20, 22, 25, 1, 2, 5, 6,
            16, 19, 22, 24, 25, 3, 9, 11, 12, 15, 17, 19, 25, 28, 1, 10, 12, 17, 18, 20, 24,
            25, 26, 5, 7, 12, 14, 15, 16, 19, 20, 28, 1, 2, 3, 10, 11, 13, 17, 20, 25, 1, 2
            , 8, 10, 15, 21, 24, 26, 28, 5, 9, 10, 12, 13, 15, 23, 26, 27, 2, 8, 9, 11, 14,
            15, 16, 24, 27, 1, 2, 3, 10, 11, 16, 17, 18, 28, 1, 3, 6, 7, 11, 12, 19, 24, 26,
            1, 2, 3, 9, 12, 15, 18, 20, 23, 1, 6, 7, 10, 14, 16, 25, 26, 27, 1, 4, 5, 7, 8,
            9, 10, 14, 22, 3, 6, 7, 8, 12, 15, 16, 23, 28, 1, 3, 4, 7, 15, 20, 21, 22, 26,
            1, 2, 5, 6, 7, 9, 13, 19, 23, 5, 13, 14, 17, 21, 24, 26, 27, 28, 1, 2, 4, 5, 9,
            10, 14, 18, 19, 2, 3, 4, 14, 18, 21, 22, 24, 28, 8, 9, 11, 16, 19, 21, 22, 24, 27,
            3, 6, 8, 11, 12, 15, 20, 24, 26, 1, 3, 10, 11, 12, 15, 21, 23, 28, 6, 8, 17,
            18, 19, 21, 24, 25, 28, 3, 5, 6, 8, 11, 19, 23, 27, 28, 1, 3, 6, 12, 13, 20, 21,
            25, 26, 6, 7, 8, 10, 12, 16, 18, 26, 27, 3, 5, 6, 10, 11, 12, 15, 23, 26, 1, 9,
            14, 17, 19, 20, 21, 27, 28, 2, 3, 11, 12, 16, 18, 19, 25, 28, 3, 5, 9, 10, 11,
            12, 13, 14, 19, 2, 4, 7, 9, 14, 15, 17, 18, 20, 2, 3, 5, 8, 13, 14, 16, 24, 27,
            1, 6, 7, 8, 9, 14, 22, 24, 27, 1, 6, 7, 12, 15, 19, 23, 24, 28, 1, 4, 8, 9, 13,
            14, 15, 21, 26, 1, 2, 4, 9, 14, 15, 25, 27, 28, 2, 3, 4, 5, 18, 19, 21, 24, 26,
            3, 4, 9, 10, 14, 15, 21, 22, 26, 2, 6, 12, 13, 16, 17, 18, 21, 27, 3, 7, 12, 13,
            15, 20, 22, 26, 27, 1, 2, 6, 8, 10, 16, 22, 25, 27, 1, 3, 4, 12, 15, 19, 23, 25
            , 28, 4, 14, 15, 16, 17, 21, 24, 26, 27, 3, 4, 5, 9, 14, 23, 25, 26, 27, 1, 4, 7
            , 12, 13, 15, 20, 22, 25, 2, 3, 5, 7, 8, 10, 16, 23, 24, 3, 4, 5, 8, 10, 14, 15,
            25, 26, 5, 7, 10, 12, 17, 20, 26, 27, 2
        };


        #endregion

        #region pytaniaOcb
        private readonly int[] _pytaniaOcb = new int[180]
        {
            1,5,8,2,15,18,6,9,12,11,16,19,7,17,20,4,6,10,1,5,13,6,12,14,3,15,18,9,11,
            16,
            3,
            7,20,1,
            8,12,4,13,19,7,17,20,10,14,15,2,5,
            18,7,
            12,16,
            3,8,
            13,
            4,7,
            19,
            9,
            15,
            20,
            6,
            9,
            19,
            1,
            5,
            14,
            8,
            16,
            18,
            7,
            13,
            17,
            3,
            8,
            14,
            12,
            15,
            19,
            2,
            6,
            11,
            4,
            8,
            20,
            1,
            6,
            17,
            7,
            10,
            18,
            12,
            16,
            19,
            4,
            5,
            9,
            6,
            10,
            20,
            2,
            11,
            19,
            1,
            7,
            9,
            7,
            10,
            15,
            9,
            16,
            18,
            5,
            14,
            20,
            4,
            8,
            17,
            6,
            13,
            19,
            2,
            10,
            15,
            9,
            12,
            16,
            3,
            14,
            18,
            3,
            14,
            17,
            5,
            13,
            19,
            6,
            8,
            17,
            7,
            10,
            20,
            1,
            11,
            16,
            4,
            12,
            17,
            3,
            13,
            19,
            5,
            9,
            15,
            7,
            10,
            18,
            6,
            11,
            16,
            10,
            15,
            18,
            2,
            16,
            20,
            3,
            5,
            17,
            9,
            14,
            18,
            4,
            8,
            20,
            5,
            11,
            15,
            2,
            8,
            12
        };


        #endregion

        #region pytaniaCwb

        private int[] _pytaniaCwb = new int[180]
        {
            1,
            6,
            11,
            2,
            7,
            16,
            3,
            9,
            12,
            4,
            8,
            18,
            5,
            10,
            13,
            1,
            14,
            17,
            6,
            12,
            19,
            2,
            11,
            20,
            3,
            7,
            16,
            9,
            13,
            17,
            5,
            14,
            20,
            1,
            8,
            15,
            9,
            13,
            19,
            3,
            10,
            11,
            2,
            7,
            17,
            6,
            12,
            16,
            4,
            14,
            20,
            9,
            15,
            19,
            1,
            9,
            13,
            5,
            14,
            18,
            2,
            12,
            17,
            5,
            6,
            20,
            4,
            11,
            16,
            9,
            13,
            19,
            6,
            15,
            20,
            1,
            7,
            10,
            2,
            15,
            19,
            3,
            10,
            14,
            5,
            9,
            11,
            4,
            10,
            15,
            3,
            7,
            13,
            8,
            12,
            17,
            1,
            14,
            16,
            2,
            11,
            20,
            5,
            9,
            17,
            4,
            10,
            18,
            7,
            15,
            19,
            3,
            6,
            16,
            1,
            10,
            20,
            2,
            8,
            13,
            7,
            12,
            17,
            5,
            9,
            14,
            6,
            11,
            19,
            3,
            15,
            20,
            4,
            10,
            16,
            7,
            13,
            19,
            4,
            10,
            14,
            9,
            11,
            18,
            3,
            13,
            20,
            10,
            12,
            17,
            9,
            15,
            16,
            1,
            7,
            19,
            2,
            11,
            17,
            4,
            9,
            15,
            3,
            10,
            20,
            5,
            7,
            17,
            5,
            12,
            19,
            2,
            6,
            16,
            1,
            14,
            17,
            4,
            6,
            16
        };

        #endregion


        public QuestionsProvider()
        {
            _questionsEmocje = new int[60][];
            _questionsOcb = new int[60][];
            _questionsCwb = new int[60][];

            for (int i = 0; i < 540; i += 9)
            {
                _questionsEmocje[i / 9] = _pytaniaEmocje.Skip(i).Take(9).ToArray();
            }

            for (int i = 0; i < 180; i+=3)
            {
                _questionsOcb[i / 3] = _pytaniaOcb.Skip(i).Take(3).ToArray();
                _questionsCwb[i / 3] = _pytaniaCwb.Skip(i).Take(3).ToArray();
            }

        }
        
        /// <summary>
        /// Zwraca 3 tablice z numerami pytan z odpowiednich kategorii pierwsza: emocje[9],Cwb[3],Ocb[3] 
        /// </summary>
        /// <param name="seriesNumber">numer serii</param>
        /// <returns></returns>
        public int[][] QuestionsForSeriesNumber(int seriesNumber)
        {
            //int[,] q = new int[3,10];           
            int[][] q = new int[3][];
            q[0] = _questionsEmocje[seriesNumber];
            q[1] = _questionsCwb[seriesNumber];
            q[2] = _questionsOcb[seriesNumber];
            return q;
        }
        

    }
}

